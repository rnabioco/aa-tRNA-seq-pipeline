# config version v.0.1.0
#
# path to TSV file that lists samples to process
# two columns:
#   - sample_id
#     a unique id for the sample
#   - run_directory
#     a path to the sequencing run folder.
#
# If multiple runs are provided for the same sample_id the reads will be merged before processing.
samples: config/samples.tsv

# output directory for files produced by pipline
output_directory: ".test/outputs"

# directory for rebasecalled bam files
rebasecalled_bam_directory: ".test/outputs/rbc_bams"

# either a path to a basecalling model to use with dorado or a model selection name to specify model to download and use
base_calling_model: ".test/rna004_130bps_sup@v5.0.0"

# either FAST5 or POD5, if FAST5 then these files will be converted to pod5 before rebasecalling
input_format: "POD5"

# path to fasta file to use for bwa alignment.
# a BWA index will be built if it does not exist for this fasta file
fasta: ".test/sacCer3-mature-tRNAs-dual-adapt-v2.fa"

# tRNA gene information table
#
# The format is four whitespace deliminated columns, no header:
#  -  sequence name of uncharged tRNA: Name of the uncharged tRNA sequence, must match the fasta entry (e.g. tRNA-Ala-AGC-1-1-uncharged)
#  - sequence name of charged tRNA: Name of the charged tRNA sequence, must match the fasta entry (e.g. tRNA-Ala-AGC-1-1-charged)
#  - isodecoder: The isodecoder family of the tRNA sequence (e.g. Ala-AGC)
#  - tRNA gene name: tRNA gene name that is used to represent the tRNA, can be any string, and
#  doesn't have to match a sequence name in the fasta file.

# This is only required if wanting to filter by excluding reads mapped equivalently to charged and uncharged tRNAs or different isodecoders and desiring a table of charging status per tRNA gene name.
# to disable set to ""
#trna_table: ".test/sacCer3-mature-tRNAs-dual-adapt-v2.table"

# If a kmer table if provided then the pipeline will use get_signal_metrics.py to extract metrics using remora
remora_kmer_table: ".test/9mer_levels_v1.txt"

#read classification model - remora trained model to classify charged vs uncharged reads
remora_cca_classifier: "models/cca_classifier.pt"

# additional options for particular commands
opts:
    # additional options for dorado basecalling e.g
    dorado: " --emit-moves "

    # additional options for bwa alignment
    # based on Novoa lab optimising bwa for tRNA alignment
    # the -h 20 option is used to increase the number of secondary alignments reported in the XA tag
    bwa: " -W 13 -k 6 -T 20 -x ont2d"

    # requires positive strand alignment
    # requires at least 1 5' adapter base
    # requires 1 3' adapter base in the discriminating adapter region between charged and uncharged (v2 adapters).
    bam_filter: "-5 24 -3 23 -s"

    #requires positive strand alignment and excludes non-primary alignments
    coverage: "--filterRNAstrand 'reverse' --samFlagExclude 256"

    # pass additional options to get_signal_metrics.py script which uses Remora to calculate metrics
    remora: ""
